Spherical to Cartesian Conversion:

Define the Values:
const float onePi = acos(1.0) / 180.0;
theta  = u_time * onePi;
theta = fmod(theta, acos(1.0));
phi = cos(theta) * acos(1.0);
rho = sin(theta) * acos(1.0);

Convert to Cartesian:
x = r sin(phi) cos(rho);
y = r sin(phi) sin(rho);
z = r cos(phi);

Floating Point Modulus:
float fmod(float num, float div)
{
    int result = (int)(num / div);
    return(num - ((float) result * div));
}
